#! /bin/bash
#
# Fast incremental backup with
#   - Rotating backup for last 7 days and last 4 weeks, and
#   - Monthly forever archives
# Backup size is minimized through hard-linking
#

# backup FROM to DEST mirroring MIRROR
function backup() {
	local src="$1" dest="$3" mirror="$5"
	rsync -aHv --human-readable --stats --progress \
		--link-dest="$mirror" \
		--delete --delete-after --delete-excluded \
		--exclude=lost+found/ --exclude=Trash/ --exclude=.mozilla/ --exclude=.cache/ \
		--exclude=.gvfs/ --exclude=.macromedia/Flash_Player/ \
		--exclude=.local/share/gvfs-metadata/ \
		--exclude=/imports/ \
		"$src" "$dest"
}

# Wait for backup disk
mountpoint='/media/backup'

if ! mount | grep -q $mountpoint; then
	echo 'Waiting for backup disk to be mounted'
	until mount | grep -q $mountpoint; do sleep 1; done
fi

# Backup directories
bkup="$mountpoint/`hostname`"
today="$bkup-backup/`date '+%a, %b %d %Y'`"
yesterday="$bkup-backup/`ls -t $bkup-backup/ | head -1 | sed 's/\/$//'`"
week="$bkup-backup/week $(( `date +%_d` / 7 )) - `date '+%b %d %Y'`"
month="$bkup-archive/`date '+%Y-%m - %b %d %Y'`"

# Daily backup Monday... Sunday -- preserves last 7 days
[ ! -d "$today" -a -d "${today:0:-13}"* ] && mv "${today:0:-13}"* "$today"
backup /home/ to "$today/" mirroring "$yesterday"*
touch "$today"

# Weekly snapshots -- preserves 1 month
if [ ! -d "${week:0:-8}"* ]; then
	[ -d "${week:0:-14}"* ] && mv "${week:0:-14}"* "$week"
	backup "$today/" to "$week/" mirroring "$today"
fi

# Monthly forever snapshots
[ -d "${month:0:-14}"* ] ||  backup "$today/" to "$month/" mirroring "$today"




